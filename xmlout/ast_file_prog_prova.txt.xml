<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><VarDeclOp><TypeOp>integer</TypeOp><Var>(id, n1)  (null)</Var></VarDeclOp><VarDeclOp><TypeOp>string</TypeOp><Var>(id, n3)  (null)</Var><Var>(id, n2)  (null)</Var></VarDeclOp><VarDeclOp><TypeOp> null</TypeOp><Var>(id, n4)  (int_const, 4)</Var></VarDeclOp><VarDeclOp><TypeOp>real</TypeOp><Var>(id, n5)  (null)</Var></VarDeclOp><VarDeclOp><TypeOp> null</TypeOp><Var>(id, n6)  (bool_const, true)</Var></VarDeclOp><FunDeclOp>(id, ciao) <BodyOp/><ProcFunParamOp>(id, par1) <TypeOp>integer</TypeOp><ModeOp>in</ModeOp></ProcFunParamOp><ProcFunParamOp>(id, par2) <TypeOp>integer</TypeOp><ModeOp>in</ModeOp></ProcFunParamOp><TypeOp>integer</TypeOp><TypeOp>real</TypeOp></FunDeclOp><ProcOp>(id, ciao) <BodyOp><VarDeclOp><TypeOp>string</TypeOp><Var>(id, n3)  (null)</Var><Var>(id, n2)  (null)</Var></VarDeclOp><AssignOp>(id, n1) (id, n2) (id, n5)  (int_const, 3)</AssignOp></BodyOp></ProcOp><ProcOp>(id, ciao) <BodyOp><ProcCallOp>(id, ciccio1) </ProcCallOp><ProcCallOp>(id, ciccio) <ProcExpr>(id, n6) val</ProcExpr></ProcCallOp><ProcCallOp>(id, ciccio) <ProcExpr>(id, n6) val</ProcExpr><ProcExpr>(id, nRef) rif</ProcExpr></ProcCallOp><IfOp> (int_const, 3)<BodyOp><AssignOp>(id, n8) <AddOp> (int_const, 5) (int_const, 7)</AddOp></AssignOp></BodyOp><BodyOp><AssignOp>(id, n7)  (int_const, 4)</AssignOp></BodyOp><ElifOp> (int_const, 4)<BodyOp><AssignOp>(id, n9)  (int_const, 7)</AssignOp></BodyOp></ElifOp></IfOp></BodyOp></ProcOp><VarDeclOp><TypeOp>integer</TypeOp><Var>(id, n1)  (null)</Var></VarDeclOp><FunDeclOp>(id, ciccio) <BodyOp><AssignOp>(id, n1) <MinusOp> (int_const, 5)</MinusOp></AssignOp><ReturnOp>(id, n1)  (int_const, 3)</ReturnOp><WhileOp> (bool_const, true)<BodyOp><AssignOp>(id, pippo) (id, pluto) </AssignOp></BodyOp></WhileOp><ProcCallOp>(id, ciccio) </ProcCallOp><ProcCallOp>(id, ciccio) <ProcExpr>(id, n1) val</ProcExpr></ProcCallOp><IOArgsOp><IOModeOp>write</IOModeOp> (string_const, paperina)(id, a)  (string_const, minnie)</IOArgsOp></BodyOp><ProcFunParamOp>(id, par1) <TypeOp>real</TypeOp><ModeOp>in</ModeOp></ProcFunParamOp><TypeOp>integer</TypeOp></FunDeclOp></ProgramOp>